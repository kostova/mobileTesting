function IdleState(){}function SuspendState(){}function EndState(){}var ElevatedState=require("./AutomationState.js").ElevatedState,automationMessageFactory=require("./automationMessageFactory.js"),logger=require("./logger.js"),TSProtocol=require("./TsAutomationProtocol.js"),validation=require("./Validation.js");IdleState.prototype=new ElevatedState,IdleState.prototype.beginState=function(){this.machine.emit("connected",this.machine);var a=this.machine.server.getClientsWithCapabilities(this.machine,[TSProtocol.capabilities.AUTOMATION_TEST_RUNNER]),b=automationMessageFactory.getAgentAddedPayload(this.machine.getUUID(),this.machine.getPlatformInfo(),this.machine.getCapabilities());this.machine.server.broadcastPayload(this.machine,a,b)},IdleState.prototype.handleMessage=function(a,b,c){if(!validation.validateIncomingAutomationMessage(b))return a.sendAutomationMessage(b.generateResponseFromIdWithPayload(TSProtocol.serverId,automationMessageFactory.errorPayloadWithError(validation.getError()))),this;if(b.toId===TSProtocol.serverId){if("suspend"===b.data.cmd)return this.machine.stop(),this;logger.debug("Unhandled command received from client.")}else b.fromId=this.machine.getUUID(),this.machine.server.routeMessage(this.machine,b,c);return this},IdleState.prototype.routeMessage=function(a,b){return a.sendAutomationMessage(b),this},IdleState.prototype.onClosed=function(a,b){if(b){var c=this.machine.server.getClientsWithCapabilities(this.machine,[TSProtocol.capabilities.AUTOMATION_TEST_RUNNER]),d=automationMessageFactory.getAgentRemovedPayload(this.machine.getUUID());return this.machine.server.broadcastPayload(this.machine,c,d),new EndState}return new SuspendState},SuspendState.prototype=new ElevatedState,SuspendState.prototype.beginState=function(){this.machine.suspend();var a=this.machine.server.getClientsWithCapabilities(this.machine,[TSProtocol.capabilities.AUTOMATION_TEST_RUNNER]),b=automationMessageFactory.getAgentRemovedPayload(this.machine.getUUID());this.machine.server.broadcastPayload(this.machine,a,b)},SuspendState.prototype.handleMessage=function(a,b,c){return c(automationMessageFactory.errorPayloadWithError(TSProtocol.errors.RECIPIENT_NOT_AVAILABLE)),this},SuspendState.prototype.routeMessage=function(a,b,c){return c(automationMessageFactory.errorPayloadWithError(TSProtocol.errors.RECIPIENT_NOT_AVAILABLE)),this},SuspendState.prototype.onClosed=function(){return this},SuspendState.prototype.onSuspended=function(){return this},SuspendState.prototype.onResumed=function(){return new IdleState},SuspendState.prototype.onDropped=function(){return logger.debug("Requesting removal from clients list."),new EndState},EndState.prototype=new ElevatedState,EndState.prototype.beginState=function(){this.machine.emit("disconnected",this.machine)},module.exports={IdleState:IdleState};