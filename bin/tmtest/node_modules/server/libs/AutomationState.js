function AutomationState(){}function ElevatedState(){}var automationMessageFactory=require("./automationMessageFactory.js"),logger=require("./logger.js"),TSProtocol=require("./TsAutomationProtocol.js"),validation=require("./Validation.js");AutomationState.prototype={constructor:AutomationState,beginState:function(){},endState:function(){},onConnected:function(){return this},onMessageReceived:function(){return this},routeMessage:function(){return this},onClosed:function(){return this},onSuspended:function(){return this},onResumed:function(){return this},onDropped:function(){return this},onSiblingConnected:function(){return this},onSiblingDisconnected:function(){return this}},ElevatedState.prototype=new AutomationState,ElevatedState.prototype.onMessageReceived=function(a,b){var c=null;try{c=automationMessageFactory.messageWithJSONString(b),logger.debug("Received message:\n",c.toPrettyString())}catch(d){return a.sendAutomationMessage(c.generateResponseFromIdWithPayload(TSProtocol.serverId,automationMessageFactory.errorPayloadWithError(TSProtocol.errors.INVALID_MESSAGE))),logger.error("Error: Unable to parse message. Ignoring it."),logger.error(d),this}try{return this.handleMessage(a,c,function(b){a.sendAutomationMessage(c.generateResponseFromIdWithPayload(TSProtocol.serverId,b))})}catch(d){return a.sendAutomationMessage(c.generateResponseFromIdWithPayload(TSProtocol.serverId,automationMessageFactory.errorPayloadWithError(TSProtocol.errors.GENERIC_ERROR))),logger.error("Error: An error occurred while handling this message."),logger.error(d),this}},ElevatedState.prototype.handleMessage=function(){return this},module.exports={AutomationState:AutomationState,ElevatedState:ElevatedState};