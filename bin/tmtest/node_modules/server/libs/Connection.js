function Connection(a,b){EventEmitter.call(this),this._provider=a,this._provider.oldSendMessage=this._provider.sendMessage.bind(this._provider),this._provider.sendMessage=function(a){logger.debug("Sending RAW message:\n",a),this.oldSendMessage(a)}.bind(this._provider),this._provider.sendAutomationMessage=function(a){logger.debug("Sending message:\n",a.toPrettyString()),this.oldSendMessage(a.toString())}.bind(this._provider),this._startState=b,this.isStarted=!1,this._uuid=utils.uuid(),this._isSuspended=!1,this._handlers={connect:this.handleConnect.bind(this),message:this.handleMessage.bind(this),close:this.handleClose.bind(this)},this._forceStop=!1}var EventEmitter=require("events").EventEmitter,util=require("util"),utils=require("./utils.js"),logger=require("./logger.js"),TSProtocol=require("./TsAutomationProtocol.js");util.inherits(Connection,EventEmitter),Connection.prototype._version=TSProtocol.MT_PROTOCOL_VERSION_MAX,Connection.prototype._uuid=null,Connection.prototype._provider=null,Connection.prototype._startState=null,Connection.prototype._identity=null,Connection.prototype._platformInfo=null,Connection.prototype._capabilities=null,Connection.prototype._suspendTimer=null,Connection.prototype.setVersion=function(a){this._version=a},Connection.prototype.getVersion=function(){return this._version},Connection.prototype.setUUID=function(a){this._uuid=a},Connection.prototype.getUUID=function(){return this._uuid},Connection.prototype.setIdentity=function(a){this._identity=a},Connection.prototype.getIdentity=function(){return this._identity},Connection.prototype.setPlatformInfo=function(a){this._platformInfo=a},Connection.prototype.getPlatformInfo=function(){return this._platformInfo},Connection.prototype.getIsSuspended=function(){return this._isSuspended},Connection.prototype.setCapabilities=function(a){this._capabilities=a},Connection.prototype.getCapabilities=function(){return this._capabilities},Connection.prototype.transitionToState=function(a){a&&this._state!==a&&(this._state&&(this._state.endState(this._provider),this._state.machine=null),this._state=a,this._state.machine=this,this._state.beginState(this._provider))},Connection.prototype.start=function(){this.isStarted||(this.isStarted=!0,this.subscribeProviderEvents(),this.transitionToState(this._startState),this._startState=null,this._provider.start())},Connection.prototype.handleConnect=function(){this.isStarted&&this._state&&this.transitionToState(this._state.onConnected(this._provider))},Connection.prototype.handleMessage=function(a){this.isStarted&&this._state&&this.transitionToState(this._state.onMessageReceived(this._provider,a))},Connection.prototype.handleClose=function(){this.isStarted&&this._state&&this.transitionToState(this._state.onClosed(this._provider,this._forceStop))},Connection.prototype.stop=function(a){this._forceStop=a,this._provider.stop()},Connection.prototype.routeMessage=function(a,b){this.transitionToState(this._state.routeMessage(this._provider,a,b))},Connection.prototype.suspend=function(){if(!this._isSuspended){logger.debug("Suspending connection..."),this._isSuspended=!0;var a=this.server.getMessageTimeout()-1e3;logger.debug("Client disconnected. Waiting "+a+"ms before removal."),this._suspendTimer&&(clearTimeout(this._suspendTimer),this._suspendTimer=void 0),this._suspendTimer=setTimeout(function(){this.transitionToState(this._state.onDropped(this._provider))}.bind(this),a),this.transitionToState(this._state.onSuspended(this._provider))}},Connection.prototype.resume=function(a){this._isSuspended&&(logger.debug("Resuming connection..."),this._isSuspended=!1,this._suspendTimer&&(clearTimeout(this._suspendTimer),this._suspendTimer=void 0),this!==a&&(a.setUUID(a.getIdentity().resumeId),this.unsubscribeProviderEvents(),this._provider.stop(),a.unsubscribeProviderEvents(),this._provider=a._provider,this.subscribeProviderEvents()),this.transitionToState(this._state.onResumed(this._provider)))},Connection.prototype.siblingConnected=function(a){this.transitionToState(this._state.onSiblingConnected(this._provider,a))},Connection.prototype.siblingDisconnected=function(a){this.transitionToState(this._state.onSiblingDisconnected(this._provider,a))},Connection.prototype.subscribeProviderEvents=function(){this._provider.on("connect",this._handlers.connect),this._provider.on("message",this._handlers.message),this._provider.on("close",this._handlers.close)},Connection.prototype.unsubscribeProviderEvents=function(){this._provider.removeListener("connect",this._handlers.connect),this._provider.removeListener("message",this._handlers.message),this._provider.removeListener("close",this._handlers.close)},module.exports={Connection:Connection};