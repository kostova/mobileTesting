function WebSocketListener(a){EventEmitter.call(this),this.httpServer=null,this.wsServer=null,this._port=a}var http=require("http"),WebSocketServer=require("websocket").server,EventEmitter=require("events").EventEmitter,util=require("util"),WebSocketsServerProvider=require("./WebSocketsServerProvider.js"),Connection=require("./Connection.js").Connection,AutomationStates=require("./AutomationHandshakeStates.js"),TSProtocol=require("./TsAutomationProtocol.js");util.inherits(WebSocketListener,EventEmitter),WebSocketListener.prototype.start=function(){this.httpServer=http.createServer(function(){});var a=this._port;this.httpServer.on("error",function(b){"EADDRINUSE"===b.code||"EACCES"===b.code?console.log("Port",a,"already in use."):console.log("An unexpected error has occured",b),process.exit(1)}),this.httpServer.listen(this._port,function(){}),this.wsServer=new WebSocketServer({httpServer:this.httpServer,autoAcceptConnections:!1}),this.wsServer.on("request",function(a){var b=a.accept(TSProtocol.name),c=new Connection(new WebSocketsServerProvider(b),new AutomationStates.ServerHandshakeState1);this.emit("connectionCreated",c)}.bind(this))},WebSocketListener.prototype.stop=function(){this.wsServer.removeListener("request",this),this.wsServer.shutDown()},module.exports=WebSocketListener;