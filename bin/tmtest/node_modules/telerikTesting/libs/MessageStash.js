var logger=require("./logger.js"),messagesAwaitingResponse={},running=!1,timerId,singleton={start:function(a){return running?(logger.debug("MessageStash is already running."),void 0):(logger.debug("Starting MessageStash."),timerId=setInterval(function(){var b=(new Date).getTime();for(var c in messagesAwaitingResponse){var d=messagesAwaitingResponse[c];b>d.timestamp&&(logger.debug("Dropping timed out message."),a(d.originalMsg,d.responseCallback),delete messagesAwaitingResponse[c])}},100),running=!0,void 0)},stop:function(){if(!running)return logger.debug("MessageStash is already stopped."),void 0;logger.debug("Stopping MessageStash."),clearInterval(timerId);for(var a in messagesAwaitingResponse){var b=messagesAwaitingResponse[a];logger.debug("Dropping cancelled message."),b.responseCallback({error:{code:100,description:"cancelled awaiting response for message."}}),delete messagesAwaitingResponse[a]}running=!1},stash:function(a,b,c,d){messagesAwaitingResponse[a]={responseCallback:c,timestamp:(new Date).getTime()+b,originalTimeout:b,originalMsg:d}},pull:function(a){var b=messagesAwaitingResponse[a];return b?(delete messagesAwaitingResponse[a],b):null}};module.exports=singleton;