function WebSocketsClientProvider(a,b){EventEmitter.call(this),this._address=a,this.defaultTimeout=b}var WebSocketClient=require("websocket").client,TsAutomationProtocol=require("./TsAutomationProtocol.js"),EventEmitter=require("events").EventEmitter,util=require("util");util.inherits(WebSocketsClientProvider,EventEmitter),WebSocketsClientProvider.prototype.start=function(){this.websocket||(this.websocket=new WebSocketClient,this.websocket.connect(this._address,TsAutomationProtocol.name),this.websocket.on("connect",function(a){this.websocket=a,this.websocket.on("message",function(a){a&&a.utf8Data?this.emit("message",a.utf8Data):console.log("Error: Invalid message type received. Ignoring it.")}.bind(this)),this.websocket.on("close",function(){this.emit("close"),this.websocket=null}.bind(this)),this.emit("connect")}.bind(this)))},WebSocketsClientProvider.prototype.stop=function(){this.websocket&&(this.websocket.close(),this.websocket=null)},WebSocketsClientProvider.prototype.sendMessage=function(a){this.websocket&&this.websocket.send(a)},module.exports=WebSocketsClientProvider;